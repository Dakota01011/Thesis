#ifndef KNN_KNN_H
#define KNN_KNN_H

//#include <iostream>
#include <stdio.h>
//#include <math.h>
#include "DataSet.h"
#include <unistd.h>
#include "xil_io.h"
#include "xparameters.h"
#include "KNN_accelerator.h"
#include "xaxidma_hw.h"
using namespace std;

#define WriteReg(BaseAddress, RegOffset, Data) \
  	Xil_Out32((BaseAddress) + (RegOffset), (u32)(Data))

#define ReadReg(BaseAddress, RegOffset) \
    Xil_In32((BaseAddress) + (RegOffset))

#define MaxLength 16777215 // 0xFF_FFFF

class KNN {

public:
    static void kNNFPGAClassify(const int trainingData[NUM_POINTS][NUM_FEATURES], u32 outputData[], int k);
};

#endif //KNN_KNN_H
